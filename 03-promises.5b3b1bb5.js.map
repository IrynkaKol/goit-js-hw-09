{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAS,SAACC,EAASC,GACrC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAEPH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAyBL,SAASQ,EAAWC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC9BU,EAAAd,GAASe,OAAOC,QAAQ,mBAAkCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,O,CAGlE,SAASc,EAASL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,EAAAd,GAASe,OAAOI,QAAQ,oBAAmCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,O,CAzBtDgB,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GACdA,EAAEC,iBAIJ,IAHA,IAAIpB,EAAQqB,OAAOF,EAAEG,cAActB,MAAMuB,OACnCC,EAASH,OAAOF,EAAEG,cAAcE,OAAOD,OACvCE,EAAOJ,OAAOF,EAAEG,cAAcG,KAAKF,OAChCG,EAAE,EAAGA,GAAKF,EAAQE,GAAK,EAC9B5B,EAAc4B,EAAG1B,GAClB2B,KAAKnB,GAGLoB,MAAMd,GAGLd,GAASyB,C,IAUZI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n    if (shouldResolve) {\n      resolve({ position, delay });\n      \n    } else {\n      reject({ position, delay });\n      } \n  }, delay);\n  });\n  return promise;\n}\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  const amount = Number(e.currentTarget.amount.value);\n  const step = Number(e.currentTarget.step.value);\n  for (let i=1; i <= amount; i += 1) {\n    createPromise(i, delay)\n  .then(onSuccess) \n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //Notiflix.Notify.success(`Fulfill promise ${position} in ${delay} ms`)\n  .catch(onError) \n  //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    //Notiflix.Notify.failure(`Rejected promise ${position} in ${delay} ms`)\n    delay += step;\n}\n}\n\nfunction onSuccess ({ position, delay })  {\n  Notiflix.Notify.success(`Fulfill promise ${position} in ${delay} ms`)\n}\n\nfunction onError ({ position, delay })  {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay} ms`)\n}n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","amount","step","i","then","catch","n"],"version":3,"file":"03-promises.5b3b1bb5.js.map"}