{"mappings":"qLAMA,SAASA,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAS,CAACC,EAASC,KACrC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAEPH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,gTAjBXQ,EAAA,SAqBaC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GACdA,EAAEC,kBACJ,IAAIC,EAAQC,OAAOH,EAAEI,cAAchB,MAAMiB,OACzC,MAAMC,EAASH,OAAOH,EAAEI,cAAcE,OAAOD,OACvCE,EAAOJ,OAAOH,EAAEI,cAAcG,KAAKF,OACzC,IAAK,IAAIG,EAAE,EAAGA,GAAKF,EAAQE,GAAK,EAC9BtB,EAAc,EAAGgB,GAClBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,QAAQC,IAAI,uBAAqBxB,QAAiBC,MAAU,IAG7DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBsB,QAAQC,IAAI,sBAAoBxB,QAAeC,MAAU,IAG3Dc,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n//const delay = document.querySelector('input[name=\"delay\"]');\n//const step = document.querySelector('input[name=\"step\"]');\n//const amount = document.querySelector('input[name=\"amount\"]');\n//const btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n    if (shouldResolve) {\n      resolve({ position, delay });\n      \n    } else {\n      reject({ position, delay });\n      } \n  }, delay);\n  });\n  return promise;\n}\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preveantDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  const amount = Number(e.currentTarget.amount.value);\n  const step = Number(e.currentTarget.step.value);\n  for (let i=1; i <= amount; i += 1) {\n    createPromise(1, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //Notiflix.Notify.success(`Fulfill promise ${position} in $[delay] ms`)\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    //Notiflix.Notify.failure(`Rejected promise ${position} in $[delay] ms`)\n  });\n  delay += step\n}\n}"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","parcelRequire","document","querySelector","addEventListener","e","preveantDefault","delay1","Number","currentTarget","value","amount","step","i","then","console","log","catch"],"version":3,"file":"03-promises.3ef8736f.js.map"}