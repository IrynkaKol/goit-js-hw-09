{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAS,CAACC,EAASC,KACrC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAEPH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIEQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GACdA,EAAEC,iBACJ,IAAIZ,EAAQa,OAAOF,EAAEG,cAAcd,MAAMe,OACzC,MAAMC,EAASH,OAAOF,EAAEG,cAAcE,OAAOD,OACvCE,EAAOJ,OAAOF,EAAEG,cAAcG,KAAKF,OACzC,IAAK,IAAIG,EAAE,EAAGA,GAAKF,EAAQE,GAAK,EAC9BpB,EAAcoB,EAAGlB,GAClBmB,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MAEjBoB,EAAAxB,GAASyB,OAAOC,QAAQ,mBAAmBvB,mBAA0B,IAEtEwB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAElBoB,EAAAxB,GAASyB,OAAOG,QAAQ,oBAAoBzB,mBAA0B,IAExEC,GAASiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n    if (shouldResolve) {\n      resolve({ position, delay });\n      \n    } else {\n      reject({ position, delay });\n      } \n  }, delay);\n  });\n  return promise;\n}\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  const amount = Number(e.currentTarget.amount.value);\n  const step = Number(e.currentTarget.step.value);\n  for (let i=1; i <= amount; i += 1) {\n    createPromise(i, delay)\n  .then(({ position, delay }) => {\n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`Fulfill promise ${position} in $[delay] ms`)\n  })\n  .catch(({ position, delay }) => {\n    //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`Rejected promise ${position} in $[delay] ms`)\n  });\n  delay += step;\n}\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","amount","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.389e018f.js.map"}