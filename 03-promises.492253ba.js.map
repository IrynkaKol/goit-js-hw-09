{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAS,SAACC,EAASC,GACrC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAEPH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIQQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAkBC,GACdA,EAAEC,iBAIJ,IAHA,IAAIZ,EAAQa,OAAOF,EAAEG,cAAcd,MAAMe,OACnCC,EAASH,OAAOF,EAAEG,cAAcE,OAAOD,OACvCE,EAAOJ,OAAOF,EAAEG,cAAcG,KAAKF,OAChCG,EAAE,EAAGA,GAAKF,EAAQE,GAAK,EAC9BpB,EAAcoB,EAAGlB,GAClBmB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAeqB,EAALpB,MAEjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,mBAA4BC,OAATzB,EAAS,mB,IAErD0B,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAeqB,EAALpB,MAElBqB,EAAAzB,GAAS0B,OAAOI,QAAQ,oBAA6BF,OAATzB,EAAS,mB,IAEvDC,GAASiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      \n    if (shouldResolve) {\n      resolve({ position, delay });\n      \n    } else {\n      reject({ position, delay });\n      } \n  }, delay);\n  });\n  return promise;\n}\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  const amount = Number(e.currentTarget.amount.value);\n  const step = Number(e.currentTarget.step.value);\n  for (let i=1; i <= amount; i += 1) {\n    createPromise(i, delay)\n  .then(({ position, delay }) => {\n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`Fulfill promise ${position} in $[delay] ms`)\n  })\n  .catch(({ position, delay }) => {\n    //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`Rejected promise ${position} in $[delay] ms`)\n  });\n  delay += step;\n}\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","amount","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.492253ba.js.map"}